/*
 * generated by Xtext 2.9.0
 */
package de.htwberlin.selabs.rcrs.tests

import com.google.inject.Inject
import de.htwberlin.selabs.rcrs.rcrsDsl.RcrsModel
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.eclipse.xtext.junit4.validation.ValidationTestHelper

@RunWith(XtextRunner)
@InjectWith(RcrsDslInjectorProvider)
class RcrsDslParsingTest{

	@Inject
	extension ParseHelper<RcrsModel> 
	@Inject extension ValidationTestHelper

	val inp1 ='''
	project japanese
	types Cop Dad Mom Criminal Boy(2) Girl(2)
	
	boat_drivers Cop Dad Mom
	
	dangerous
	dummy : Mom; // does not make sense, just testing
	'''
	
	val inp2 = '''
	CriminalWithoutCop : Criminal  && !Cop && (Dad || Mom || Boy || Girl);
	
	BoyUnsafe : Mom && Boy ;
	
	GirlUnsafe : Dad && Girl ;'''

	@Test 
	def void parseInp1() {
		val result = inp1.parse
		Assert.assertNotNull(result)
		result.assertNoErrors
	}

	@Test 
	def void parseInp12() {
		val result = (inp1 + inp2).parse
		Assert.assertNotNull(result)
		result.assertNoErrors
	}
}
